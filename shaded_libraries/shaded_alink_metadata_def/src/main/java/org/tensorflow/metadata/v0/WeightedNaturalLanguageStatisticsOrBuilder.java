// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics.proto

package org.tensorflow.metadata.v0;

public interface WeightedNaturalLanguageStatisticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.metadata.v0.WeightedNaturalLanguageStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Weighted feature coverage.
   * </pre>
   *
   * <code>double feature_coverage = 1;</code>
   * @return The featureCoverage.
   */
  double getFeatureCoverage();

  /**
   * <pre>
   * Weighted average token length.
   * </pre>
   *
   * <code>double avg_token_length = 2;</code>
   * @return The avgTokenLength.
   */
  double getAvgTokenLength();

  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return Whether the tokenLengthHistogram field is set.
   */
  boolean hasTokenLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return The tokenLengthHistogram.
   */
  Histogram getTokenLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   */
  HistogramOrBuilder getTokenLengthHistogramOrBuilder();

  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return Whether the sequenceLengthHistogram field is set.
   */
  boolean hasSequenceLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return The sequenceLengthHistogram.
   */
  Histogram getSequenceLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   */
  HistogramOrBuilder getSequenceLengthHistogramOrBuilder();

  /**
   * <pre>
   * Weighted number of sequences that do not match the location constraint.
   * </pre>
   *
   * <code>double location_misses = 4;</code>
   * @return The locationMisses.
   */
  double getLocationMisses();

  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   * @return Whether the tokenStatistics field is set.
   */
  boolean hasTokenStatistics();
  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   * @return The tokenStatistics.
   */
  NaturalLanguageStatistics.TokenStatistics getTokenStatistics();
  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   */
  NaturalLanguageStatistics.TokenStatisticsOrBuilder getTokenStatisticsOrBuilder();

  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   * @return Whether the rankHistogram field is set.
   */
  boolean hasRankHistogram();
  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   * @return The rankHistogram.
   */
  RankHistogram getRankHistogram();
  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   */
  RankHistogramOrBuilder getRankHistogramOrBuilder();
}
