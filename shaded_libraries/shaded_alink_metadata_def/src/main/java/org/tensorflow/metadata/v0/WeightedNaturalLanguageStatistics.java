// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics.proto

package org.tensorflow.metadata.v0;

/**
 * <pre>
 * Statistics for a weighted feature with an NL domain.
 * </pre>
 *
 * Protobuf type {@code tensorflow.metadata.v0.WeightedNaturalLanguageStatistics}
 */
public final class WeightedNaturalLanguageStatistics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.metadata.v0.WeightedNaturalLanguageStatistics)
    WeightedNaturalLanguageStatisticsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WeightedNaturalLanguageStatistics.newBuilder() to construct.
  private WeightedNaturalLanguageStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WeightedNaturalLanguageStatistics() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new WeightedNaturalLanguageStatistics();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WeightedNaturalLanguageStatistics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 9: {

            featureCoverage_ = input.readDouble();
            break;
          }
          case 17: {

            avgTokenLength_ = input.readDouble();
            break;
          }
          case 26: {
            Histogram.Builder subBuilder = null;
            if (tokenLengthHistogram_ != null) {
              subBuilder = tokenLengthHistogram_.toBuilder();
            }
            tokenLengthHistogram_ = input.readMessage(Histogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenLengthHistogram_);
              tokenLengthHistogram_ = subBuilder.buildPartial();
            }

            break;
          }
          case 33: {

            locationMisses_ = input.readDouble();
            break;
          }
          case 42: {
            NaturalLanguageStatistics.TokenStatistics.Builder subBuilder = null;
            if (tokenStatistics_ != null) {
              subBuilder = tokenStatistics_.toBuilder();
            }
            tokenStatistics_ = input.readMessage(NaturalLanguageStatistics.TokenStatistics.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenStatistics_);
              tokenStatistics_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            RankHistogram.Builder subBuilder = null;
            if (rankHistogram_ != null) {
              subBuilder = rankHistogram_.toBuilder();
            }
            rankHistogram_ = input.readMessage(RankHistogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rankHistogram_);
              rankHistogram_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            Histogram.Builder subBuilder = null;
            if (sequenceLengthHistogram_ != null) {
              subBuilder = sequenceLengthHistogram_.toBuilder();
            }
            sequenceLengthHistogram_ = input.readMessage(Histogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sequenceLengthHistogram_);
              sequenceLengthHistogram_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Statistics.internal_static_tensorflow_metadata_v0_WeightedNaturalLanguageStatistics_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Statistics.internal_static_tensorflow_metadata_v0_WeightedNaturalLanguageStatistics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            WeightedNaturalLanguageStatistics.class, Builder.class);
  }

  public static final int FEATURE_COVERAGE_FIELD_NUMBER = 1;
  private double featureCoverage_;
  /**
   * <pre>
   * Weighted feature coverage.
   * </pre>
   *
   * <code>double feature_coverage = 1;</code>
   * @return The featureCoverage.
   */
  @Override
  public double getFeatureCoverage() {
    return featureCoverage_;
  }

  public static final int AVG_TOKEN_LENGTH_FIELD_NUMBER = 2;
  private double avgTokenLength_;
  /**
   * <pre>
   * Weighted average token length.
   * </pre>
   *
   * <code>double avg_token_length = 2;</code>
   * @return The avgTokenLength.
   */
  @Override
  public double getAvgTokenLength() {
    return avgTokenLength_;
  }

  public static final int TOKEN_LENGTH_HISTOGRAM_FIELD_NUMBER = 3;
  private Histogram tokenLengthHistogram_;
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return Whether the tokenLengthHistogram field is set.
   */
  @Override
  public boolean hasTokenLengthHistogram() {
    return tokenLengthHistogram_ != null;
  }
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return The tokenLengthHistogram.
   */
  @Override
  public Histogram getTokenLengthHistogram() {
    return tokenLengthHistogram_ == null ? Histogram.getDefaultInstance() : tokenLengthHistogram_;
  }
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   */
  @Override
  public HistogramOrBuilder getTokenLengthHistogramOrBuilder() {
    return getTokenLengthHistogram();
  }

  public static final int SEQUENCE_LENGTH_HISTOGRAM_FIELD_NUMBER = 9;
  private Histogram sequenceLengthHistogram_;
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return Whether the sequenceLengthHistogram field is set.
   */
  @Override
  public boolean hasSequenceLengthHistogram() {
    return sequenceLengthHistogram_ != null;
  }
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return The sequenceLengthHistogram.
   */
  @Override
  public Histogram getSequenceLengthHistogram() {
    return sequenceLengthHistogram_ == null ? Histogram.getDefaultInstance() : sequenceLengthHistogram_;
  }
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   */
  @Override
  public HistogramOrBuilder getSequenceLengthHistogramOrBuilder() {
    return getSequenceLengthHistogram();
  }

  public static final int LOCATION_MISSES_FIELD_NUMBER = 4;
  private double locationMisses_;
  /**
   * <pre>
   * Weighted number of sequences that do not match the location constraint.
   * </pre>
   *
   * <code>double location_misses = 4;</code>
   * @return The locationMisses.
   */
  @Override
  public double getLocationMisses() {
    return locationMisses_;
  }

  public static final int TOKEN_STATISTICS_FIELD_NUMBER = 5;
  private NaturalLanguageStatistics.TokenStatistics tokenStatistics_;
  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   * @return Whether the tokenStatistics field is set.
   */
  @Override
  public boolean hasTokenStatistics() {
    return tokenStatistics_ != null;
  }
  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   * @return The tokenStatistics.
   */
  @Override
  public NaturalLanguageStatistics.TokenStatistics getTokenStatistics() {
    return tokenStatistics_ == null ? NaturalLanguageStatistics.TokenStatistics.getDefaultInstance() : tokenStatistics_;
  }
  /**
   * <pre>
   * Per-token weighted statistics.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
   */
  @Override
  public NaturalLanguageStatistics.TokenStatisticsOrBuilder getTokenStatisticsOrBuilder() {
    return getTokenStatistics();
  }

  public static final int RANK_HISTOGRAM_FIELD_NUMBER = 6;
  private RankHistogram rankHistogram_;
  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   * @return Whether the rankHistogram field is set.
   */
  @Override
  public boolean hasRankHistogram() {
    return rankHistogram_ != null;
  }
  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   * @return The rankHistogram.
   */
  @Override
  public RankHistogram getRankHistogram() {
    return rankHistogram_ == null ? RankHistogram.getDefaultInstance() : rankHistogram_;
  }
  /**
   * <pre>
   * The rank histogram with the weighted tokens for the feature.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
   */
  @Override
  public RankHistogramOrBuilder getRankHistogramOrBuilder() {
    return getRankHistogram();
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (Double.doubleToRawLongBits(featureCoverage_) != 0) {
      output.writeDouble(1, featureCoverage_);
    }
    if (Double.doubleToRawLongBits(avgTokenLength_) != 0) {
      output.writeDouble(2, avgTokenLength_);
    }
    if (tokenLengthHistogram_ != null) {
      output.writeMessage(3, getTokenLengthHistogram());
    }
    if (Double.doubleToRawLongBits(locationMisses_) != 0) {
      output.writeDouble(4, locationMisses_);
    }
    if (tokenStatistics_ != null) {
      output.writeMessage(5, getTokenStatistics());
    }
    if (rankHistogram_ != null) {
      output.writeMessage(6, getRankHistogram());
    }
    if (sequenceLengthHistogram_ != null) {
      output.writeMessage(9, getSequenceLengthHistogram());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (Double.doubleToRawLongBits(featureCoverage_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, featureCoverage_);
    }
    if (Double.doubleToRawLongBits(avgTokenLength_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, avgTokenLength_);
    }
    if (tokenLengthHistogram_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTokenLengthHistogram());
    }
    if (Double.doubleToRawLongBits(locationMisses_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, locationMisses_);
    }
    if (tokenStatistics_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTokenStatistics());
    }
    if (rankHistogram_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getRankHistogram());
    }
    if (sequenceLengthHistogram_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getSequenceLengthHistogram());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof WeightedNaturalLanguageStatistics)) {
      return super.equals(obj);
    }
    WeightedNaturalLanguageStatistics other = (WeightedNaturalLanguageStatistics) obj;

    if (Double.doubleToLongBits(getFeatureCoverage())
        != Double.doubleToLongBits(
            other.getFeatureCoverage())) return false;
    if (Double.doubleToLongBits(getAvgTokenLength())
        != Double.doubleToLongBits(
            other.getAvgTokenLength())) return false;
    if (hasTokenLengthHistogram() != other.hasTokenLengthHistogram()) return false;
    if (hasTokenLengthHistogram()) {
      if (!getTokenLengthHistogram()
          .equals(other.getTokenLengthHistogram())) return false;
    }
    if (hasSequenceLengthHistogram() != other.hasSequenceLengthHistogram()) return false;
    if (hasSequenceLengthHistogram()) {
      if (!getSequenceLengthHistogram()
          .equals(other.getSequenceLengthHistogram())) return false;
    }
    if (Double.doubleToLongBits(getLocationMisses())
        != Double.doubleToLongBits(
            other.getLocationMisses())) return false;
    if (hasTokenStatistics() != other.hasTokenStatistics()) return false;
    if (hasTokenStatistics()) {
      if (!getTokenStatistics()
          .equals(other.getTokenStatistics())) return false;
    }
    if (hasRankHistogram() != other.hasRankHistogram()) return false;
    if (hasRankHistogram()) {
      if (!getRankHistogram()
          .equals(other.getRankHistogram())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FEATURE_COVERAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getFeatureCoverage()));
    hash = (37 * hash) + AVG_TOKEN_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getAvgTokenLength()));
    if (hasTokenLengthHistogram()) {
      hash = (37 * hash) + TOKEN_LENGTH_HISTOGRAM_FIELD_NUMBER;
      hash = (53 * hash) + getTokenLengthHistogram().hashCode();
    }
    if (hasSequenceLengthHistogram()) {
      hash = (37 * hash) + SEQUENCE_LENGTH_HISTOGRAM_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceLengthHistogram().hashCode();
    }
    hash = (37 * hash) + LOCATION_MISSES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getLocationMisses()));
    if (hasTokenStatistics()) {
      hash = (37 * hash) + TOKEN_STATISTICS_FIELD_NUMBER;
      hash = (53 * hash) + getTokenStatistics().hashCode();
    }
    if (hasRankHistogram()) {
      hash = (37 * hash) + RANK_HISTOGRAM_FIELD_NUMBER;
      hash = (53 * hash) + getRankHistogram().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static WeightedNaturalLanguageStatistics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static WeightedNaturalLanguageStatistics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static WeightedNaturalLanguageStatistics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static WeightedNaturalLanguageStatistics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(WeightedNaturalLanguageStatistics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Statistics for a weighted feature with an NL domain.
   * </pre>
   *
   * Protobuf type {@code tensorflow.metadata.v0.WeightedNaturalLanguageStatistics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.metadata.v0.WeightedNaturalLanguageStatistics)
      WeightedNaturalLanguageStatisticsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Statistics.internal_static_tensorflow_metadata_v0_WeightedNaturalLanguageStatistics_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Statistics.internal_static_tensorflow_metadata_v0_WeightedNaturalLanguageStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WeightedNaturalLanguageStatistics.class, Builder.class);
    }

    // Construct using org.tensorflow.metadata.v0.WeightedNaturalLanguageStatistics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      featureCoverage_ = 0D;

      avgTokenLength_ = 0D;

      if (tokenLengthHistogramBuilder_ == null) {
        tokenLengthHistogram_ = null;
      } else {
        tokenLengthHistogram_ = null;
        tokenLengthHistogramBuilder_ = null;
      }
      if (sequenceLengthHistogramBuilder_ == null) {
        sequenceLengthHistogram_ = null;
      } else {
        sequenceLengthHistogram_ = null;
        sequenceLengthHistogramBuilder_ = null;
      }
      locationMisses_ = 0D;

      if (tokenStatisticsBuilder_ == null) {
        tokenStatistics_ = null;
      } else {
        tokenStatistics_ = null;
        tokenStatisticsBuilder_ = null;
      }
      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = null;
      } else {
        rankHistogram_ = null;
        rankHistogramBuilder_ = null;
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Statistics.internal_static_tensorflow_metadata_v0_WeightedNaturalLanguageStatistics_descriptor;
    }

    @Override
    public WeightedNaturalLanguageStatistics getDefaultInstanceForType() {
      return WeightedNaturalLanguageStatistics.getDefaultInstance();
    }

    @Override
    public WeightedNaturalLanguageStatistics build() {
      WeightedNaturalLanguageStatistics result = buildPartial();
      if (!result.isInitialized()) {
        throw Builder.newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public WeightedNaturalLanguageStatistics buildPartial() {
      WeightedNaturalLanguageStatistics result = new WeightedNaturalLanguageStatistics(this);
      result.featureCoverage_ = featureCoverage_;
      result.avgTokenLength_ = avgTokenLength_;
      if (tokenLengthHistogramBuilder_ == null) {
        result.tokenLengthHistogram_ = tokenLengthHistogram_;
      } else {
        result.tokenLengthHistogram_ = tokenLengthHistogramBuilder_.build();
      }
      if (sequenceLengthHistogramBuilder_ == null) {
        result.sequenceLengthHistogram_ = sequenceLengthHistogram_;
      } else {
        result.sequenceLengthHistogram_ = sequenceLengthHistogramBuilder_.build();
      }
      result.locationMisses_ = locationMisses_;
      if (tokenStatisticsBuilder_ == null) {
        result.tokenStatistics_ = tokenStatistics_;
      } else {
        result.tokenStatistics_ = tokenStatisticsBuilder_.build();
      }
      if (rankHistogramBuilder_ == null) {
        result.rankHistogram_ = rankHistogram_;
      } else {
        result.rankHistogram_ = rankHistogramBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof WeightedNaturalLanguageStatistics) {
        return mergeFrom((WeightedNaturalLanguageStatistics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(WeightedNaturalLanguageStatistics other) {
      if (other == WeightedNaturalLanguageStatistics.getDefaultInstance()) return this;
      if (other.getFeatureCoverage() != 0D) {
        setFeatureCoverage(other.getFeatureCoverage());
      }
      if (other.getAvgTokenLength() != 0D) {
        setAvgTokenLength(other.getAvgTokenLength());
      }
      if (other.hasTokenLengthHistogram()) {
        mergeTokenLengthHistogram(other.getTokenLengthHistogram());
      }
      if (other.hasSequenceLengthHistogram()) {
        mergeSequenceLengthHistogram(other.getSequenceLengthHistogram());
      }
      if (other.getLocationMisses() != 0D) {
        setLocationMisses(other.getLocationMisses());
      }
      if (other.hasTokenStatistics()) {
        mergeTokenStatistics(other.getTokenStatistics());
      }
      if (other.hasRankHistogram()) {
        mergeRankHistogram(other.getRankHistogram());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      WeightedNaturalLanguageStatistics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (WeightedNaturalLanguageStatistics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double featureCoverage_ ;
    /**
     * <pre>
     * Weighted feature coverage.
     * </pre>
     *
     * <code>double feature_coverage = 1;</code>
     * @return The featureCoverage.
     */
    @Override
    public double getFeatureCoverage() {
      return featureCoverage_;
    }
    /**
     * <pre>
     * Weighted feature coverage.
     * </pre>
     *
     * <code>double feature_coverage = 1;</code>
     * @param value The featureCoverage to set.
     * @return This builder for chaining.
     */
    public Builder setFeatureCoverage(double value) {
      
      featureCoverage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Weighted feature coverage.
     * </pre>
     *
     * <code>double feature_coverage = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFeatureCoverage() {
      
      featureCoverage_ = 0D;
      onChanged();
      return this;
    }

    private double avgTokenLength_ ;
    /**
     * <pre>
     * Weighted average token length.
     * </pre>
     *
     * <code>double avg_token_length = 2;</code>
     * @return The avgTokenLength.
     */
    @Override
    public double getAvgTokenLength() {
      return avgTokenLength_;
    }
    /**
     * <pre>
     * Weighted average token length.
     * </pre>
     *
     * <code>double avg_token_length = 2;</code>
     * @param value The avgTokenLength to set.
     * @return This builder for chaining.
     */
    public Builder setAvgTokenLength(double value) {
      
      avgTokenLength_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Weighted average token length.
     * </pre>
     *
     * <code>double avg_token_length = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAvgTokenLength() {
      
      avgTokenLength_ = 0D;
      onChanged();
      return this;
    }

    private Histogram tokenLengthHistogram_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Histogram, Histogram.Builder, HistogramOrBuilder> tokenLengthHistogramBuilder_;
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     * @return Whether the tokenLengthHistogram field is set.
     */
    public boolean hasTokenLengthHistogram() {
      return tokenLengthHistogramBuilder_ != null || tokenLengthHistogram_ != null;
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     * @return The tokenLengthHistogram.
     */
    public Histogram getTokenLengthHistogram() {
      if (tokenLengthHistogramBuilder_ == null) {
        return tokenLengthHistogram_ == null ? Histogram.getDefaultInstance() : tokenLengthHistogram_;
      } else {
        return tokenLengthHistogramBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public Builder setTokenLengthHistogram(Histogram value) {
      if (tokenLengthHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenLengthHistogram_ = value;
        onChanged();
      } else {
        tokenLengthHistogramBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public Builder setTokenLengthHistogram(
        Histogram.Builder builderForValue) {
      if (tokenLengthHistogramBuilder_ == null) {
        tokenLengthHistogram_ = builderForValue.build();
        onChanged();
      } else {
        tokenLengthHistogramBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public Builder mergeTokenLengthHistogram(Histogram value) {
      if (tokenLengthHistogramBuilder_ == null) {
        if (tokenLengthHistogram_ != null) {
          tokenLengthHistogram_ =
            Histogram.newBuilder(tokenLengthHistogram_).mergeFrom(value).buildPartial();
        } else {
          tokenLengthHistogram_ = value;
        }
        onChanged();
      } else {
        tokenLengthHistogramBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public Builder clearTokenLengthHistogram() {
      if (tokenLengthHistogramBuilder_ == null) {
        tokenLengthHistogram_ = null;
        onChanged();
      } else {
        tokenLengthHistogram_ = null;
        tokenLengthHistogramBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public Histogram.Builder getTokenLengthHistogramBuilder() {
      
      onChanged();
      return getTokenLengthHistogramFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    public HistogramOrBuilder getTokenLengthHistogramOrBuilder() {
      if (tokenLengthHistogramBuilder_ != null) {
        return tokenLengthHistogramBuilder_.getMessageOrBuilder();
      } else {
        return tokenLengthHistogram_ == null ?
            Histogram.getDefaultInstance() : tokenLengthHistogram_;
      }
    }
    /**
     * <pre>
     * Histogram containing the distribution of token lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Histogram, Histogram.Builder, HistogramOrBuilder>
        getTokenLengthHistogramFieldBuilder() {
      if (tokenLengthHistogramBuilder_ == null) {
        tokenLengthHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Histogram, Histogram.Builder, HistogramOrBuilder>(
                getTokenLengthHistogram(),
                getParentForChildren(),
                isClean());
        tokenLengthHistogram_ = null;
      }
      return tokenLengthHistogramBuilder_;
    }

    private Histogram sequenceLengthHistogram_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Histogram, Histogram.Builder, HistogramOrBuilder> sequenceLengthHistogramBuilder_;
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     * @return Whether the sequenceLengthHistogram field is set.
     */
    public boolean hasSequenceLengthHistogram() {
      return sequenceLengthHistogramBuilder_ != null || sequenceLengthHistogram_ != null;
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     * @return The sequenceLengthHistogram.
     */
    public Histogram getSequenceLengthHistogram() {
      if (sequenceLengthHistogramBuilder_ == null) {
        return sequenceLengthHistogram_ == null ? Histogram.getDefaultInstance() : sequenceLengthHistogram_;
      } else {
        return sequenceLengthHistogramBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public Builder setSequenceLengthHistogram(Histogram value) {
      if (sequenceLengthHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sequenceLengthHistogram_ = value;
        onChanged();
      } else {
        sequenceLengthHistogramBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public Builder setSequenceLengthHistogram(
        Histogram.Builder builderForValue) {
      if (sequenceLengthHistogramBuilder_ == null) {
        sequenceLengthHistogram_ = builderForValue.build();
        onChanged();
      } else {
        sequenceLengthHistogramBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public Builder mergeSequenceLengthHistogram(Histogram value) {
      if (sequenceLengthHistogramBuilder_ == null) {
        if (sequenceLengthHistogram_ != null) {
          sequenceLengthHistogram_ =
            Histogram.newBuilder(sequenceLengthHistogram_).mergeFrom(value).buildPartial();
        } else {
          sequenceLengthHistogram_ = value;
        }
        onChanged();
      } else {
        sequenceLengthHistogramBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public Builder clearSequenceLengthHistogram() {
      if (sequenceLengthHistogramBuilder_ == null) {
        sequenceLengthHistogram_ = null;
        onChanged();
      } else {
        sequenceLengthHistogram_ = null;
        sequenceLengthHistogramBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public Histogram.Builder getSequenceLengthHistogramBuilder() {
      
      onChanged();
      return getSequenceLengthHistogramFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    public HistogramOrBuilder getSequenceLengthHistogramOrBuilder() {
      if (sequenceLengthHistogramBuilder_ != null) {
        return sequenceLengthHistogramBuilder_.getMessageOrBuilder();
      } else {
        return sequenceLengthHistogram_ == null ?
            Histogram.getDefaultInstance() : sequenceLengthHistogram_;
      }
    }
    /**
     * <pre>
     * Histogram containing the distribution of sequence lengths.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Histogram, Histogram.Builder, HistogramOrBuilder>
        getSequenceLengthHistogramFieldBuilder() {
      if (sequenceLengthHistogramBuilder_ == null) {
        sequenceLengthHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Histogram, Histogram.Builder, HistogramOrBuilder>(
                getSequenceLengthHistogram(),
                getParentForChildren(),
                isClean());
        sequenceLengthHistogram_ = null;
      }
      return sequenceLengthHistogramBuilder_;
    }

    private double locationMisses_ ;
    /**
     * <pre>
     * Weighted number of sequences that do not match the location constraint.
     * </pre>
     *
     * <code>double location_misses = 4;</code>
     * @return The locationMisses.
     */
    @Override
    public double getLocationMisses() {
      return locationMisses_;
    }
    /**
     * <pre>
     * Weighted number of sequences that do not match the location constraint.
     * </pre>
     *
     * <code>double location_misses = 4;</code>
     * @param value The locationMisses to set.
     * @return This builder for chaining.
     */
    public Builder setLocationMisses(double value) {
      
      locationMisses_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Weighted number of sequences that do not match the location constraint.
     * </pre>
     *
     * <code>double location_misses = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocationMisses() {
      
      locationMisses_ = 0D;
      onChanged();
      return this;
    }

    private NaturalLanguageStatistics.TokenStatistics tokenStatistics_;
    private com.google.protobuf.SingleFieldBuilderV3<
        NaturalLanguageStatistics.TokenStatistics, NaturalLanguageStatistics.TokenStatistics.Builder, NaturalLanguageStatistics.TokenStatisticsOrBuilder> tokenStatisticsBuilder_;
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     * @return Whether the tokenStatistics field is set.
     */
    public boolean hasTokenStatistics() {
      return tokenStatisticsBuilder_ != null || tokenStatistics_ != null;
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     * @return The tokenStatistics.
     */
    public NaturalLanguageStatistics.TokenStatistics getTokenStatistics() {
      if (tokenStatisticsBuilder_ == null) {
        return tokenStatistics_ == null ? NaturalLanguageStatistics.TokenStatistics.getDefaultInstance() : tokenStatistics_;
      } else {
        return tokenStatisticsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public Builder setTokenStatistics(NaturalLanguageStatistics.TokenStatistics value) {
      if (tokenStatisticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenStatistics_ = value;
        onChanged();
      } else {
        tokenStatisticsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public Builder setTokenStatistics(
        NaturalLanguageStatistics.TokenStatistics.Builder builderForValue) {
      if (tokenStatisticsBuilder_ == null) {
        tokenStatistics_ = builderForValue.build();
        onChanged();
      } else {
        tokenStatisticsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public Builder mergeTokenStatistics(NaturalLanguageStatistics.TokenStatistics value) {
      if (tokenStatisticsBuilder_ == null) {
        if (tokenStatistics_ != null) {
          tokenStatistics_ =
            NaturalLanguageStatistics.TokenStatistics.newBuilder(tokenStatistics_).mergeFrom(value).buildPartial();
        } else {
          tokenStatistics_ = value;
        }
        onChanged();
      } else {
        tokenStatisticsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public Builder clearTokenStatistics() {
      if (tokenStatisticsBuilder_ == null) {
        tokenStatistics_ = null;
        onChanged();
      } else {
        tokenStatistics_ = null;
        tokenStatisticsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public NaturalLanguageStatistics.TokenStatistics.Builder getTokenStatisticsBuilder() {
      
      onChanged();
      return getTokenStatisticsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    public NaturalLanguageStatistics.TokenStatisticsOrBuilder getTokenStatisticsOrBuilder() {
      if (tokenStatisticsBuilder_ != null) {
        return tokenStatisticsBuilder_.getMessageOrBuilder();
      } else {
        return tokenStatistics_ == null ?
            NaturalLanguageStatistics.TokenStatistics.getDefaultInstance() : tokenStatistics_;
      }
    }
    /**
     * <pre>
     * Per-token weighted statistics.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        NaturalLanguageStatistics.TokenStatistics, NaturalLanguageStatistics.TokenStatistics.Builder, NaturalLanguageStatistics.TokenStatisticsOrBuilder>
        getTokenStatisticsFieldBuilder() {
      if (tokenStatisticsBuilder_ == null) {
        tokenStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            NaturalLanguageStatistics.TokenStatistics, NaturalLanguageStatistics.TokenStatistics.Builder, NaturalLanguageStatistics.TokenStatisticsOrBuilder>(
                getTokenStatistics(),
                getParentForChildren(),
                isClean());
        tokenStatistics_ = null;
      }
      return tokenStatisticsBuilder_;
    }

    private RankHistogram rankHistogram_;
    private com.google.protobuf.SingleFieldBuilderV3<
        RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder> rankHistogramBuilder_;
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     * @return Whether the rankHistogram field is set.
     */
    public boolean hasRankHistogram() {
      return rankHistogramBuilder_ != null || rankHistogram_ != null;
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     * @return The rankHistogram.
     */
    public RankHistogram getRankHistogram() {
      if (rankHistogramBuilder_ == null) {
        return rankHistogram_ == null ? RankHistogram.getDefaultInstance() : rankHistogram_;
      } else {
        return rankHistogramBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public Builder setRankHistogram(RankHistogram value) {
      if (rankHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rankHistogram_ = value;
        onChanged();
      } else {
        rankHistogramBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public Builder setRankHistogram(
        RankHistogram.Builder builderForValue) {
      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = builderForValue.build();
        onChanged();
      } else {
        rankHistogramBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public Builder mergeRankHistogram(RankHistogram value) {
      if (rankHistogramBuilder_ == null) {
        if (rankHistogram_ != null) {
          rankHistogram_ =
            RankHistogram.newBuilder(rankHistogram_).mergeFrom(value).buildPartial();
        } else {
          rankHistogram_ = value;
        }
        onChanged();
      } else {
        rankHistogramBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public Builder clearRankHistogram() {
      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = null;
        onChanged();
      } else {
        rankHistogram_ = null;
        rankHistogramBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public RankHistogram.Builder getRankHistogramBuilder() {
      
      onChanged();
      return getRankHistogramFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    public RankHistogramOrBuilder getRankHistogramOrBuilder() {
      if (rankHistogramBuilder_ != null) {
        return rankHistogramBuilder_.getMessageOrBuilder();
      } else {
        return rankHistogram_ == null ?
            RankHistogram.getDefaultInstance() : rankHistogram_;
      }
    }
    /**
     * <pre>
     * The rank histogram with the weighted tokens for the feature.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder>
        getRankHistogramFieldBuilder() {
      if (rankHistogramBuilder_ == null) {
        rankHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder>(
                getRankHistogram(),
                getParentForChildren(),
                isClean());
        rankHistogram_ = null;
      }
      return rankHistogramBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.metadata.v0.WeightedNaturalLanguageStatistics)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.WeightedNaturalLanguageStatistics)
  private static final WeightedNaturalLanguageStatistics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new WeightedNaturalLanguageStatistics();
  }

  public static WeightedNaturalLanguageStatistics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WeightedNaturalLanguageStatistics>
      PARSER = new com.google.protobuf.AbstractParser<WeightedNaturalLanguageStatistics>() {
    @Override
    public WeightedNaturalLanguageStatistics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WeightedNaturalLanguageStatistics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WeightedNaturalLanguageStatistics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<WeightedNaturalLanguageStatistics> getParserForType() {
    return PARSER;
  }

  @Override
  public WeightedNaturalLanguageStatistics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

