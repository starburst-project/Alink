// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics.proto

package org.tensorflow.metadata.v0;

/**
 * <pre>
 * Statistics about the presence and valency of feature values. Feature values
 * could be nested lists. A feature in tf.Examples or other "flat" datasets has
 * values of nest level 1 -- they are lists of primitives. A nest level N
 * (N &gt; 1) feature value is a list of lists of nest level (N - 1).
 * This proto can be used to describe the presence and valency of values at each
 * level.
 * </pre>
 *
 * Protobuf type {@code tensorflow.metadata.v0.PresenceAndValencyStatistics}
 */
public final class PresenceAndValencyStatistics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.metadata.v0.PresenceAndValencyStatistics)
    PresenceAndValencyStatisticsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PresenceAndValencyStatistics.newBuilder() to construct.
  private PresenceAndValencyStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PresenceAndValencyStatistics() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new PresenceAndValencyStatistics();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PresenceAndValencyStatistics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            numNonMissing_ = input.readUInt64();
            break;
          }
          case 16: {

            numMissing_ = input.readUInt64();
            break;
          }
          case 24: {

            minNumValues_ = input.readUInt64();
            break;
          }
          case 32: {

            maxNumValues_ = input.readUInt64();
            break;
          }
          case 40: {

            totNumValues_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Statistics.internal_static_tensorflow_metadata_v0_PresenceAndValencyStatistics_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Statistics.internal_static_tensorflow_metadata_v0_PresenceAndValencyStatistics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            PresenceAndValencyStatistics.class, Builder.class);
  }

  public static final int NUM_NON_MISSING_FIELD_NUMBER = 1;
  private long numNonMissing_;
  /**
   * <pre>
   * Note: missing and non-missing counts are conditioned on the upper level
   * being non-missing (i.e. if the upper level is missing/null, all the levels
   * nested below are by definition missing, but not counted).
   * Number non-missing (not-null) values.
   * </pre>
   *
   * <code>uint64 num_non_missing = 1;</code>
   * @return The numNonMissing.
   */
  @Override
  public long getNumNonMissing() {
    return numNonMissing_;
  }

  public static final int NUM_MISSING_FIELD_NUMBER = 2;
  private long numMissing_;
  /**
   * <pre>
   * Number of missing (null) values.
   * </pre>
   *
   * <code>uint64 num_missing = 2;</code>
   * @return The numMissing.
   */
  @Override
  public long getNumMissing() {
    return numMissing_;
  }

  public static final int MIN_NUM_VALUES_FIELD_NUMBER = 3;
  private long minNumValues_;
  /**
   * <pre>
   * Minimum length of the values (note that nulls are not considered).
   * </pre>
   *
   * <code>uint64 min_num_values = 3;</code>
   * @return The minNumValues.
   */
  @Override
  public long getMinNumValues() {
    return minNumValues_;
  }

  public static final int MAX_NUM_VALUES_FIELD_NUMBER = 4;
  private long maxNumValues_;
  /**
   * <pre>
   * Maximum length of the values.
   * </pre>
   *
   * <code>uint64 max_num_values = 4;</code>
   * @return The maxNumValues.
   */
  @Override
  public long getMaxNumValues() {
    return maxNumValues_;
  }

  public static final int TOT_NUM_VALUES_FIELD_NUMBER = 5;
  private long totNumValues_;
  /**
   * <pre>
   * Total number of values.
   * </pre>
   *
   * <code>uint64 tot_num_values = 5;</code>
   * @return The totNumValues.
   */
  @Override
  public long getTotNumValues() {
    return totNumValues_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (numNonMissing_ != 0L) {
      output.writeUInt64(1, numNonMissing_);
    }
    if (numMissing_ != 0L) {
      output.writeUInt64(2, numMissing_);
    }
    if (minNumValues_ != 0L) {
      output.writeUInt64(3, minNumValues_);
    }
    if (maxNumValues_ != 0L) {
      output.writeUInt64(4, maxNumValues_);
    }
    if (totNumValues_ != 0L) {
      output.writeUInt64(5, totNumValues_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (numNonMissing_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, numNonMissing_);
    }
    if (numMissing_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, numMissing_);
    }
    if (minNumValues_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, minNumValues_);
    }
    if (maxNumValues_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, maxNumValues_);
    }
    if (totNumValues_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, totNumValues_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof PresenceAndValencyStatistics)) {
      return super.equals(obj);
    }
    PresenceAndValencyStatistics other = (PresenceAndValencyStatistics) obj;

    if (getNumNonMissing()
        != other.getNumNonMissing()) return false;
    if (getNumMissing()
        != other.getNumMissing()) return false;
    if (getMinNumValues()
        != other.getMinNumValues()) return false;
    if (getMaxNumValues()
        != other.getMaxNumValues()) return false;
    if (getTotNumValues()
        != other.getTotNumValues()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NUM_NON_MISSING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumNonMissing());
    hash = (37 * hash) + NUM_MISSING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumMissing());
    hash = (37 * hash) + MIN_NUM_VALUES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinNumValues());
    hash = (37 * hash) + MAX_NUM_VALUES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxNumValues());
    hash = (37 * hash) + TOT_NUM_VALUES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotNumValues());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static PresenceAndValencyStatistics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static PresenceAndValencyStatistics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static PresenceAndValencyStatistics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static PresenceAndValencyStatistics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static PresenceAndValencyStatistics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static PresenceAndValencyStatistics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static PresenceAndValencyStatistics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static PresenceAndValencyStatistics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static PresenceAndValencyStatistics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static PresenceAndValencyStatistics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static PresenceAndValencyStatistics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static PresenceAndValencyStatistics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(PresenceAndValencyStatistics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Statistics about the presence and valency of feature values. Feature values
   * could be nested lists. A feature in tf.Examples or other "flat" datasets has
   * values of nest level 1 -- they are lists of primitives. A nest level N
   * (N &gt; 1) feature value is a list of lists of nest level (N - 1).
   * This proto can be used to describe the presence and valency of values at each
   * level.
   * </pre>
   *
   * Protobuf type {@code tensorflow.metadata.v0.PresenceAndValencyStatistics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.metadata.v0.PresenceAndValencyStatistics)
      PresenceAndValencyStatisticsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Statistics.internal_static_tensorflow_metadata_v0_PresenceAndValencyStatistics_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Statistics.internal_static_tensorflow_metadata_v0_PresenceAndValencyStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PresenceAndValencyStatistics.class, Builder.class);
    }

    // Construct using org.tensorflow.metadata.v0.PresenceAndValencyStatistics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      numNonMissing_ = 0L;

      numMissing_ = 0L;

      minNumValues_ = 0L;

      maxNumValues_ = 0L;

      totNumValues_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Statistics.internal_static_tensorflow_metadata_v0_PresenceAndValencyStatistics_descriptor;
    }

    @Override
    public PresenceAndValencyStatistics getDefaultInstanceForType() {
      return PresenceAndValencyStatistics.getDefaultInstance();
    }

    @Override
    public PresenceAndValencyStatistics build() {
      PresenceAndValencyStatistics result = buildPartial();
      if (!result.isInitialized()) {
        throw Builder.newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public PresenceAndValencyStatistics buildPartial() {
      PresenceAndValencyStatistics result = new PresenceAndValencyStatistics(this);
      result.numNonMissing_ = numNonMissing_;
      result.numMissing_ = numMissing_;
      result.minNumValues_ = minNumValues_;
      result.maxNumValues_ = maxNumValues_;
      result.totNumValues_ = totNumValues_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof PresenceAndValencyStatistics) {
        return mergeFrom((PresenceAndValencyStatistics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(PresenceAndValencyStatistics other) {
      if (other == PresenceAndValencyStatistics.getDefaultInstance()) return this;
      if (other.getNumNonMissing() != 0L) {
        setNumNonMissing(other.getNumNonMissing());
      }
      if (other.getNumMissing() != 0L) {
        setNumMissing(other.getNumMissing());
      }
      if (other.getMinNumValues() != 0L) {
        setMinNumValues(other.getMinNumValues());
      }
      if (other.getMaxNumValues() != 0L) {
        setMaxNumValues(other.getMaxNumValues());
      }
      if (other.getTotNumValues() != 0L) {
        setTotNumValues(other.getTotNumValues());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      PresenceAndValencyStatistics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (PresenceAndValencyStatistics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long numNonMissing_ ;
    /**
     * <pre>
     * Note: missing and non-missing counts are conditioned on the upper level
     * being non-missing (i.e. if the upper level is missing/null, all the levels
     * nested below are by definition missing, but not counted).
     * Number non-missing (not-null) values.
     * </pre>
     *
     * <code>uint64 num_non_missing = 1;</code>
     * @return The numNonMissing.
     */
    @Override
    public long getNumNonMissing() {
      return numNonMissing_;
    }
    /**
     * <pre>
     * Note: missing and non-missing counts are conditioned on the upper level
     * being non-missing (i.e. if the upper level is missing/null, all the levels
     * nested below are by definition missing, but not counted).
     * Number non-missing (not-null) values.
     * </pre>
     *
     * <code>uint64 num_non_missing = 1;</code>
     * @param value The numNonMissing to set.
     * @return This builder for chaining.
     */
    public Builder setNumNonMissing(long value) {
      
      numNonMissing_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Note: missing and non-missing counts are conditioned on the upper level
     * being non-missing (i.e. if the upper level is missing/null, all the levels
     * nested below are by definition missing, but not counted).
     * Number non-missing (not-null) values.
     * </pre>
     *
     * <code>uint64 num_non_missing = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumNonMissing() {
      
      numNonMissing_ = 0L;
      onChanged();
      return this;
    }

    private long numMissing_ ;
    /**
     * <pre>
     * Number of missing (null) values.
     * </pre>
     *
     * <code>uint64 num_missing = 2;</code>
     * @return The numMissing.
     */
    @Override
    public long getNumMissing() {
      return numMissing_;
    }
    /**
     * <pre>
     * Number of missing (null) values.
     * </pre>
     *
     * <code>uint64 num_missing = 2;</code>
     * @param value The numMissing to set.
     * @return This builder for chaining.
     */
    public Builder setNumMissing(long value) {
      
      numMissing_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of missing (null) values.
     * </pre>
     *
     * <code>uint64 num_missing = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumMissing() {
      
      numMissing_ = 0L;
      onChanged();
      return this;
    }

    private long minNumValues_ ;
    /**
     * <pre>
     * Minimum length of the values (note that nulls are not considered).
     * </pre>
     *
     * <code>uint64 min_num_values = 3;</code>
     * @return The minNumValues.
     */
    @Override
    public long getMinNumValues() {
      return minNumValues_;
    }
    /**
     * <pre>
     * Minimum length of the values (note that nulls are not considered).
     * </pre>
     *
     * <code>uint64 min_num_values = 3;</code>
     * @param value The minNumValues to set.
     * @return This builder for chaining.
     */
    public Builder setMinNumValues(long value) {
      
      minNumValues_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum length of the values (note that nulls are not considered).
     * </pre>
     *
     * <code>uint64 min_num_values = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinNumValues() {
      
      minNumValues_ = 0L;
      onChanged();
      return this;
    }

    private long maxNumValues_ ;
    /**
     * <pre>
     * Maximum length of the values.
     * </pre>
     *
     * <code>uint64 max_num_values = 4;</code>
     * @return The maxNumValues.
     */
    @Override
    public long getMaxNumValues() {
      return maxNumValues_;
    }
    /**
     * <pre>
     * Maximum length of the values.
     * </pre>
     *
     * <code>uint64 max_num_values = 4;</code>
     * @param value The maxNumValues to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNumValues(long value) {
      
      maxNumValues_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Maximum length of the values.
     * </pre>
     *
     * <code>uint64 max_num_values = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNumValues() {
      
      maxNumValues_ = 0L;
      onChanged();
      return this;
    }

    private long totNumValues_ ;
    /**
     * <pre>
     * Total number of values.
     * </pre>
     *
     * <code>uint64 tot_num_values = 5;</code>
     * @return The totNumValues.
     */
    @Override
    public long getTotNumValues() {
      return totNumValues_;
    }
    /**
     * <pre>
     * Total number of values.
     * </pre>
     *
     * <code>uint64 tot_num_values = 5;</code>
     * @param value The totNumValues to set.
     * @return This builder for chaining.
     */
    public Builder setTotNumValues(long value) {
      
      totNumValues_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total number of values.
     * </pre>
     *
     * <code>uint64 tot_num_values = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotNumValues() {
      
      totNumValues_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.metadata.v0.PresenceAndValencyStatistics)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.PresenceAndValencyStatistics)
  private static final PresenceAndValencyStatistics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new PresenceAndValencyStatistics();
  }

  public static PresenceAndValencyStatistics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PresenceAndValencyStatistics>
      PARSER = new com.google.protobuf.AbstractParser<PresenceAndValencyStatistics>() {
    @Override
    public PresenceAndValencyStatistics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PresenceAndValencyStatistics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PresenceAndValencyStatistics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<PresenceAndValencyStatistics> getParserForType() {
    return PARSER;
  }

  @Override
  public PresenceAndValencyStatistics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

