// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics.proto

package org.tensorflow.metadata.v0;

public interface NaturalLanguageStatisticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.metadata.v0.NaturalLanguageStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Fraction of feature input tokens considered in-vocab.
   * </pre>
   *
   * <code>double feature_coverage = 1;</code>
   * @return The featureCoverage.
   */
  double getFeatureCoverage();

  /**
   * <pre>
   * Average token length of tokens used by the feature.
   * </pre>
   *
   * <code>double avg_token_length = 2;</code>
   * @return The avgTokenLength.
   */
  double getAvgTokenLength();

  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return Whether the tokenLengthHistogram field is set.
   */
  boolean hasTokenLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   * @return The tokenLengthHistogram.
   */
  Histogram getTokenLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of token lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram token_length_histogram = 3;</code>
   */
  HistogramOrBuilder getTokenLengthHistogramOrBuilder();

  /**
   * <pre>
   * Min / max sequence lengths.
   * </pre>
   *
   * <code>int64 min_sequence_length = 10;</code>
   * @return The minSequenceLength.
   */
  long getMinSequenceLength();

  /**
   * <code>int64 max_sequence_length = 11;</code>
   * @return The maxSequenceLength.
   */
  long getMaxSequenceLength();

  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return Whether the sequenceLengthHistogram field is set.
   */
  boolean hasSequenceLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   * @return The sequenceLengthHistogram.
   */
  Histogram getSequenceLengthHistogram();
  /**
   * <pre>
   * Histogram containing the distribution of sequence lengths.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.Histogram sequence_length_histogram = 9;</code>
   */
  HistogramOrBuilder getSequenceLengthHistogramOrBuilder();

  /**
   * <pre>
   * Number of of sequences which do not match the location constraint.
   * </pre>
   *
   * <code>int64 location_misses = 4;</code>
   * @return The locationMisses.
   */
  long getLocationMisses();

  /**
   * <pre>
   * Reported sequences that are sampled from the input and have small
   * avg_token_length, low feature converage, or do not match the location
   * regex.
   * </pre>
   *
   * <code>repeated string reported_sequences = 5;</code>
   * @return A list containing the reportedSequences.
   */
  java.util.List<String>
      getReportedSequencesList();
  /**
   * <pre>
   * Reported sequences that are sampled from the input and have small
   * avg_token_length, low feature converage, or do not match the location
   * regex.
   * </pre>
   *
   * <code>repeated string reported_sequences = 5;</code>
   * @return The count of reportedSequences.
   */
  int getReportedSequencesCount();
  /**
   * <pre>
   * Reported sequences that are sampled from the input and have small
   * avg_token_length, low feature converage, or do not match the location
   * regex.
   * </pre>
   *
   * <code>repeated string reported_sequences = 5;</code>
   * @param index The index of the element to return.
   * @return The reportedSequences at the given index.
   */
  String getReportedSequences(int index);
  /**
   * <pre>
   * Reported sequences that are sampled from the input and have small
   * avg_token_length, low feature converage, or do not match the location
   * regex.
   * </pre>
   *
   * <code>repeated string reported_sequences = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the reportedSequences at the given index.
   */
  com.google.protobuf.ByteString
      getReportedSequencesBytes(int index);

  /**
   * <pre>
   * Statistics for specified tokens. TokenStatistics are only reported for
   * tokens specified in SequenceValueConstraints in the schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 6;</code>
   */
  java.util.List<NaturalLanguageStatistics.TokenStatistics>
      getTokenStatisticsList();
  /**
   * <pre>
   * Statistics for specified tokens. TokenStatistics are only reported for
   * tokens specified in SequenceValueConstraints in the schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 6;</code>
   */
  NaturalLanguageStatistics.TokenStatistics getTokenStatistics(int index);
  /**
   * <pre>
   * Statistics for specified tokens. TokenStatistics are only reported for
   * tokens specified in SequenceValueConstraints in the schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 6;</code>
   */
  int getTokenStatisticsCount();
  /**
   * <pre>
   * Statistics for specified tokens. TokenStatistics are only reported for
   * tokens specified in SequenceValueConstraints in the schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 6;</code>
   */
  java.util.List<? extends NaturalLanguageStatistics.TokenStatisticsOrBuilder>
      getTokenStatisticsOrBuilderList();
  /**
   * <pre>
   * Statistics for specified tokens. TokenStatistics are only reported for
   * tokens specified in SequenceValueConstraints in the schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.NaturalLanguageStatistics.TokenStatistics token_statistics = 6;</code>
   */
  NaturalLanguageStatistics.TokenStatisticsOrBuilder getTokenStatisticsOrBuilder(
      int index);

  /**
   * <pre>
   * The rank histogram for the tokens of the feature.
   * The rank is used to measure of how commonly the token is found in the
   * dataset. The most common token would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 7;</code>
   * @return Whether the rankHistogram field is set.
   */
  boolean hasRankHistogram();
  /**
   * <pre>
   * The rank histogram for the tokens of the feature.
   * The rank is used to measure of how commonly the token is found in the
   * dataset. The most common token would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 7;</code>
   * @return The rankHistogram.
   */
  RankHistogram getRankHistogram();
  /**
   * <pre>
   * The rank histogram for the tokens of the feature.
   * The rank is used to measure of how commonly the token is found in the
   * dataset. The most common token would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 7;</code>
   */
  RankHistogramOrBuilder getRankHistogramOrBuilder();

  /**
   * <code>.tensorflow.metadata.v0.WeightedNaturalLanguageStatistics weighted_nl_statistics = 8;</code>
   * @return Whether the weightedNlStatistics field is set.
   */
  boolean hasWeightedNlStatistics();
  /**
   * <code>.tensorflow.metadata.v0.WeightedNaturalLanguageStatistics weighted_nl_statistics = 8;</code>
   * @return The weightedNlStatistics.
   */
  WeightedNaturalLanguageStatistics getWeightedNlStatistics();
  /**
   * <code>.tensorflow.metadata.v0.WeightedNaturalLanguageStatistics weighted_nl_statistics = 8;</code>
   */
  WeightedNaturalLanguageStatisticsOrBuilder getWeightedNlStatisticsOrBuilder();
}
