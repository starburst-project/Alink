// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics.proto

package org.tensorflow.metadata.v0;

import com.google.protobuf.AbstractMessageLite;

/**
 * <pre>
 * Statistics for a string feature in a dataset.
 * </pre>
 *
 * Protobuf type {@code tensorflow.metadata.v0.StringStatistics}
 */
public final class StringStatistics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.metadata.v0.StringStatistics)
    StringStatisticsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StringStatistics.newBuilder() to construct.
  private StringStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StringStatistics() {
    topValues_ = java.util.Collections.emptyList();
    vocabularyFile_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new StringStatistics();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StringStatistics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            CommonStatistics.Builder subBuilder = null;
            if (commonStats_ != null) {
              subBuilder = commonStats_.toBuilder();
            }
            commonStats_ = input.readMessage(CommonStatistics.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(commonStats_);
              commonStats_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            unique_ = input.readUInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              topValues_ = new java.util.ArrayList<FreqAndValue>();
              mutable_bitField0_ |= 0x00000001;
            }
            topValues_.add(
                input.readMessage(FreqAndValue.parser(), extensionRegistry));
            break;
          }
          case 37: {

            avgLength_ = input.readFloat();
            break;
          }
          case 42: {
            RankHistogram.Builder subBuilder = null;
            if (rankHistogram_ != null) {
              subBuilder = rankHistogram_.toBuilder();
            }
            rankHistogram_ = input.readMessage(RankHistogram.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rankHistogram_);
              rankHistogram_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            WeightedStringStatistics.Builder subBuilder = null;
            if (weightedStringStats_ != null) {
              subBuilder = weightedStringStats_.toBuilder();
            }
            weightedStringStats_ = input.readMessage(WeightedStringStatistics.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(weightedStringStats_);
              weightedStringStats_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            String s = input.readStringRequireUtf8();

            vocabularyFile_ = s;
            break;
          }
          case 64: {

            invalidUtf8Count_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        topValues_ = java.util.Collections.unmodifiableList(topValues_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            StringStatistics.class, Builder.class);
  }

  public interface FreqAndValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.metadata.v0.StringStatistics.FreqAndValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * The number of times the value occurs. Stored as a double to be able to
     * handle weighted features.
     * </pre>
     *
     * <code>double frequency = 3;</code>
     * @return The frequency.
     */
    double getFrequency();
  }
  /**
   * Protobuf type {@code tensorflow.metadata.v0.StringStatistics.FreqAndValue}
   */
  public static final class FreqAndValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.metadata.v0.StringStatistics.FreqAndValue)
      FreqAndValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FreqAndValue.newBuilder() to construct.
    private FreqAndValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FreqAndValue() {
      value_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new FreqAndValue();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FreqAndValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 25: {

              frequency_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_FreqAndValue_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_FreqAndValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FreqAndValue.class, Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile Object value_;
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @Override
    public String getValue() {
      Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREQUENCY_FIELD_NUMBER = 3;
    private double frequency_;
    /**
     * <pre>
     * The number of times the value occurs. Stored as a double to be able to
     * handle weighted features.
     * </pre>
     *
     * <code>double frequency = 3;</code>
     * @return The frequency.
     */
    @Override
    public double getFrequency() {
      return frequency_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      if (Double.doubleToRawLongBits(frequency_) != 0) {
        output.writeDouble(3, frequency_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      if (Double.doubleToRawLongBits(frequency_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, frequency_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FreqAndValue)) {
        return super.equals(obj);
      }
      FreqAndValue other = (FreqAndValue) obj;

      if (!getValue()
          .equals(other.getValue())) return false;
      if (Double.doubleToLongBits(getFrequency())
          != Double.doubleToLongBits(
              other.getFrequency())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getFrequency()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FreqAndValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FreqAndValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FreqAndValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FreqAndValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FreqAndValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FreqAndValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FreqAndValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FreqAndValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static FreqAndValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static FreqAndValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FreqAndValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FreqAndValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FreqAndValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.metadata.v0.StringStatistics.FreqAndValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.metadata.v0.StringStatistics.FreqAndValue)
        FreqAndValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_FreqAndValue_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_FreqAndValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FreqAndValue.class, Builder.class);
      }

      // Construct using org.tensorflow.metadata.v0.StringStatistics.FreqAndValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        value_ = "";

        frequency_ = 0D;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_FreqAndValue_descriptor;
      }

      @Override
      public FreqAndValue getDefaultInstanceForType() {
        return FreqAndValue.getDefaultInstance();
      }

      @Override
      public FreqAndValue build() {
        FreqAndValue result = buildPartial();
        if (!result.isInitialized()) {
          throw Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public FreqAndValue buildPartial() {
        FreqAndValue result = new FreqAndValue(this);
        result.value_ = value_;
        result.frequency_ = frequency_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FreqAndValue) {
          return mergeFrom((FreqAndValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FreqAndValue other) {
        if (other == FreqAndValue.getDefaultInstance()) return this;
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (other.getFrequency() != 0D) {
          setFrequency(other.getFrequency());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FreqAndValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FreqAndValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public String getValue() {
        Object ref = value_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  AbstractMessageLite.checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }

      private double frequency_ ;
      /**
       * <pre>
       * The number of times the value occurs. Stored as a double to be able to
       * handle weighted features.
       * </pre>
       *
       * <code>double frequency = 3;</code>
       * @return The frequency.
       */
      @Override
      public double getFrequency() {
        return frequency_;
      }
      /**
       * <pre>
       * The number of times the value occurs. Stored as a double to be able to
       * handle weighted features.
       * </pre>
       *
       * <code>double frequency = 3;</code>
       * @param value The frequency to set.
       * @return This builder for chaining.
       */
      public Builder setFrequency(double value) {
        
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of times the value occurs. Stored as a double to be able to
       * handle weighted features.
       * </pre>
       *
       * <code>double frequency = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrequency() {
        
        frequency_ = 0D;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.metadata.v0.StringStatistics.FreqAndValue)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.StringStatistics.FreqAndValue)
    private static final FreqAndValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FreqAndValue();
    }

    public static FreqAndValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FreqAndValue>
        PARSER = new com.google.protobuf.AbstractParser<FreqAndValue>() {
      @Override
      public FreqAndValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FreqAndValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FreqAndValue> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FreqAndValue> getParserForType() {
      return PARSER;
    }

    @Override
    public FreqAndValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int COMMON_STATS_FIELD_NUMBER = 1;
  private CommonStatistics commonStats_;
  /**
   * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
   * @return Whether the commonStats field is set.
   */
  @Override
  public boolean hasCommonStats() {
    return commonStats_ != null;
  }
  /**
   * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
   * @return The commonStats.
   */
  @Override
  public CommonStatistics getCommonStats() {
    return commonStats_ == null ? CommonStatistics.getDefaultInstance() : commonStats_;
  }
  /**
   * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
   */
  @Override
  public CommonStatisticsOrBuilder getCommonStatsOrBuilder() {
    return getCommonStats();
  }

  public static final int UNIQUE_FIELD_NUMBER = 2;
  private long unique_;
  /**
   * <pre>
   * The number of unique values
   * </pre>
   *
   * <code>uint64 unique = 2;</code>
   * @return The unique.
   */
  @Override
  public long getUnique() {
    return unique_;
  }

  public static final int TOP_VALUES_FIELD_NUMBER = 3;
  private java.util.List<FreqAndValue> topValues_;
  /**
   * <pre>
   * A sorted list of the most-frequent values and their frequencies, with
   * the most-frequent being first.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
   */
  @Override
  public java.util.List<FreqAndValue> getTopValuesList() {
    return topValues_;
  }
  /**
   * <pre>
   * A sorted list of the most-frequent values and their frequencies, with
   * the most-frequent being first.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
   */
  @Override
  public java.util.List<? extends FreqAndValueOrBuilder>
      getTopValuesOrBuilderList() {
    return topValues_;
  }
  /**
   * <pre>
   * A sorted list of the most-frequent values and their frequencies, with
   * the most-frequent being first.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
   */
  @Override
  public int getTopValuesCount() {
    return topValues_.size();
  }
  /**
   * <pre>
   * A sorted list of the most-frequent values and their frequencies, with
   * the most-frequent being first.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
   */
  @Override
  public FreqAndValue getTopValues(int index) {
    return topValues_.get(index);
  }
  /**
   * <pre>
   * A sorted list of the most-frequent values and their frequencies, with
   * the most-frequent being first.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
   */
  @Override
  public FreqAndValueOrBuilder getTopValuesOrBuilder(
      int index) {
    return topValues_.get(index);
  }

  public static final int AVG_LENGTH_FIELD_NUMBER = 4;
  private float avgLength_;
  /**
   * <pre>
   * The average length of the values
   * </pre>
   *
   * <code>float avg_length = 4;</code>
   * @return The avgLength.
   */
  @Override
  public float getAvgLength() {
    return avgLength_;
  }

  public static final int RANK_HISTOGRAM_FIELD_NUMBER = 5;
  private RankHistogram rankHistogram_;
  /**
   * <pre>
   * The rank histogram for the values of the feature.
   * The rank is used to measure of how commonly the value is found in the
   * dataset. The most common value would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
   * @return Whether the rankHistogram field is set.
   */
  @Override
  public boolean hasRankHistogram() {
    return rankHistogram_ != null;
  }
  /**
   * <pre>
   * The rank histogram for the values of the feature.
   * The rank is used to measure of how commonly the value is found in the
   * dataset. The most common value would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
   * @return The rankHistogram.
   */
  @Override
  public RankHistogram getRankHistogram() {
    return rankHistogram_ == null ? RankHistogram.getDefaultInstance() : rankHistogram_;
  }
  /**
   * <pre>
   * The rank histogram for the values of the feature.
   * The rank is used to measure of how commonly the value is found in the
   * dataset. The most common value would have a rank of 1, with the second-most
   * common value having a rank of 2, and so on.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
   */
  @Override
  public RankHistogramOrBuilder getRankHistogramOrBuilder() {
    return getRankHistogram();
  }

  public static final int WEIGHTED_STRING_STATS_FIELD_NUMBER = 6;
  private WeightedStringStatistics weightedStringStats_;
  /**
   * <pre>
   * Weighted statistics for the feature, if the values have weights.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
   * @return Whether the weightedStringStats field is set.
   */
  @Override
  public boolean hasWeightedStringStats() {
    return weightedStringStats_ != null;
  }
  /**
   * <pre>
   * Weighted statistics for the feature, if the values have weights.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
   * @return The weightedStringStats.
   */
  @Override
  public WeightedStringStatistics getWeightedStringStats() {
    return weightedStringStats_ == null ? WeightedStringStatistics.getDefaultInstance() : weightedStringStats_;
  }
  /**
   * <pre>
   * Weighted statistics for the feature, if the values have weights.
   * </pre>
   *
   * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
   */
  @Override
  public WeightedStringStatisticsOrBuilder getWeightedStringStatsOrBuilder() {
    return getWeightedStringStats();
  }

  public static final int VOCABULARY_FILE_FIELD_NUMBER = 7;
  private volatile Object vocabularyFile_;
  /**
   * <pre>
   * A vocabulary file, used for vocabularies too large to store in the proto
   * itself.  Note that the file may be relative to some context-dependent
   * directory.  E.g. in TFX the feature statistics will live in a PPP and
   * vocabulary file names will be relative to this PPP.
   * </pre>
   *
   * <code>string vocabulary_file = 7;</code>
   * @return The vocabularyFile.
   */
  @Override
  public String getVocabularyFile() {
    Object ref = vocabularyFile_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      vocabularyFile_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A vocabulary file, used for vocabularies too large to store in the proto
   * itself.  Note that the file may be relative to some context-dependent
   * directory.  E.g. in TFX the feature statistics will live in a PPP and
   * vocabulary file names will be relative to this PPP.
   * </pre>
   *
   * <code>string vocabulary_file = 7;</code>
   * @return The bytes for vocabularyFile.
   */
  @Override
  public com.google.protobuf.ByteString
      getVocabularyFileBytes() {
    Object ref = vocabularyFile_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      vocabularyFile_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INVALID_UTF8_COUNT_FIELD_NUMBER = 8;
  private long invalidUtf8Count_;
  /**
   * <pre>
   * Counts the number of invalid utf8 strings present in leaf arrays for this
   * feature. Validation is only performed for byte- or string-like features (
   * those having type BYTES or STRING).
   * </pre>
   *
   * <code>uint64 invalid_utf8_count = 8;</code>
   * @return The invalidUtf8Count.
   */
  @Override
  public long getInvalidUtf8Count() {
    return invalidUtf8Count_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (commonStats_ != null) {
      output.writeMessage(1, getCommonStats());
    }
    if (unique_ != 0L) {
      output.writeUInt64(2, unique_);
    }
    for (int i = 0; i < topValues_.size(); i++) {
      output.writeMessage(3, topValues_.get(i));
    }
    if (Float.floatToRawIntBits(avgLength_) != 0) {
      output.writeFloat(4, avgLength_);
    }
    if (rankHistogram_ != null) {
      output.writeMessage(5, getRankHistogram());
    }
    if (weightedStringStats_ != null) {
      output.writeMessage(6, getWeightedStringStats());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vocabularyFile_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, vocabularyFile_);
    }
    if (invalidUtf8Count_ != 0L) {
      output.writeUInt64(8, invalidUtf8Count_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commonStats_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCommonStats());
    }
    if (unique_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, unique_);
    }
    for (int i = 0; i < topValues_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, topValues_.get(i));
    }
    if (Float.floatToRawIntBits(avgLength_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, avgLength_);
    }
    if (rankHistogram_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getRankHistogram());
    }
    if (weightedStringStats_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getWeightedStringStats());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vocabularyFile_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, vocabularyFile_);
    }
    if (invalidUtf8Count_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, invalidUtf8Count_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof StringStatistics)) {
      return super.equals(obj);
    }
    StringStatistics other = (StringStatistics) obj;

    if (hasCommonStats() != other.hasCommonStats()) return false;
    if (hasCommonStats()) {
      if (!getCommonStats()
          .equals(other.getCommonStats())) return false;
    }
    if (getUnique()
        != other.getUnique()) return false;
    if (!getTopValuesList()
        .equals(other.getTopValuesList())) return false;
    if (Float.floatToIntBits(getAvgLength())
        != Float.floatToIntBits(
            other.getAvgLength())) return false;
    if (hasRankHistogram() != other.hasRankHistogram()) return false;
    if (hasRankHistogram()) {
      if (!getRankHistogram()
          .equals(other.getRankHistogram())) return false;
    }
    if (hasWeightedStringStats() != other.hasWeightedStringStats()) return false;
    if (hasWeightedStringStats()) {
      if (!getWeightedStringStats()
          .equals(other.getWeightedStringStats())) return false;
    }
    if (!getVocabularyFile()
        .equals(other.getVocabularyFile())) return false;
    if (getInvalidUtf8Count()
        != other.getInvalidUtf8Count()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCommonStats()) {
      hash = (37 * hash) + COMMON_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getCommonStats().hashCode();
    }
    hash = (37 * hash) + UNIQUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUnique());
    if (getTopValuesCount() > 0) {
      hash = (37 * hash) + TOP_VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getTopValuesList().hashCode();
    }
    hash = (37 * hash) + AVG_LENGTH_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getAvgLength());
    if (hasRankHistogram()) {
      hash = (37 * hash) + RANK_HISTOGRAM_FIELD_NUMBER;
      hash = (53 * hash) + getRankHistogram().hashCode();
    }
    if (hasWeightedStringStats()) {
      hash = (37 * hash) + WEIGHTED_STRING_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getWeightedStringStats().hashCode();
    }
    hash = (37 * hash) + VOCABULARY_FILE_FIELD_NUMBER;
    hash = (53 * hash) + getVocabularyFile().hashCode();
    hash = (37 * hash) + INVALID_UTF8_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInvalidUtf8Count());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static StringStatistics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StringStatistics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StringStatistics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StringStatistics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StringStatistics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static StringStatistics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static StringStatistics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StringStatistics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static StringStatistics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static StringStatistics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static StringStatistics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static StringStatistics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(StringStatistics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Statistics for a string feature in a dataset.
   * </pre>
   *
   * Protobuf type {@code tensorflow.metadata.v0.StringStatistics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.metadata.v0.StringStatistics)
      StringStatisticsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StringStatistics.class, Builder.class);
    }

    // Construct using org.tensorflow.metadata.v0.StringStatistics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTopValuesFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (commonStatsBuilder_ == null) {
        commonStats_ = null;
      } else {
        commonStats_ = null;
        commonStatsBuilder_ = null;
      }
      unique_ = 0L;

      if (topValuesBuilder_ == null) {
        topValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        topValuesBuilder_.clear();
      }
      avgLength_ = 0F;

      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = null;
      } else {
        rankHistogram_ = null;
        rankHistogramBuilder_ = null;
      }
      if (weightedStringStatsBuilder_ == null) {
        weightedStringStats_ = null;
      } else {
        weightedStringStats_ = null;
        weightedStringStatsBuilder_ = null;
      }
      vocabularyFile_ = "";

      invalidUtf8Count_ = 0L;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Statistics.internal_static_tensorflow_metadata_v0_StringStatistics_descriptor;
    }

    @Override
    public StringStatistics getDefaultInstanceForType() {
      return StringStatistics.getDefaultInstance();
    }

    @Override
    public StringStatistics build() {
      StringStatistics result = buildPartial();
      if (!result.isInitialized()) {
        throw Builder.newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public StringStatistics buildPartial() {
      StringStatistics result = new StringStatistics(this);
      int from_bitField0_ = bitField0_;
      if (commonStatsBuilder_ == null) {
        result.commonStats_ = commonStats_;
      } else {
        result.commonStats_ = commonStatsBuilder_.build();
      }
      result.unique_ = unique_;
      if (topValuesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          topValues_ = java.util.Collections.unmodifiableList(topValues_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.topValues_ = topValues_;
      } else {
        result.topValues_ = topValuesBuilder_.build();
      }
      result.avgLength_ = avgLength_;
      if (rankHistogramBuilder_ == null) {
        result.rankHistogram_ = rankHistogram_;
      } else {
        result.rankHistogram_ = rankHistogramBuilder_.build();
      }
      if (weightedStringStatsBuilder_ == null) {
        result.weightedStringStats_ = weightedStringStats_;
      } else {
        result.weightedStringStats_ = weightedStringStatsBuilder_.build();
      }
      result.vocabularyFile_ = vocabularyFile_;
      result.invalidUtf8Count_ = invalidUtf8Count_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof StringStatistics) {
        return mergeFrom((StringStatistics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(StringStatistics other) {
      if (other == StringStatistics.getDefaultInstance()) return this;
      if (other.hasCommonStats()) {
        mergeCommonStats(other.getCommonStats());
      }
      if (other.getUnique() != 0L) {
        setUnique(other.getUnique());
      }
      if (topValuesBuilder_ == null) {
        if (!other.topValues_.isEmpty()) {
          if (topValues_.isEmpty()) {
            topValues_ = other.topValues_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTopValuesIsMutable();
            topValues_.addAll(other.topValues_);
          }
          onChanged();
        }
      } else {
        if (!other.topValues_.isEmpty()) {
          if (topValuesBuilder_.isEmpty()) {
            topValuesBuilder_.dispose();
            topValuesBuilder_ = null;
            topValues_ = other.topValues_;
            bitField0_ = (bitField0_ & ~0x00000001);
            topValuesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTopValuesFieldBuilder() : null;
          } else {
            topValuesBuilder_.addAllMessages(other.topValues_);
          }
        }
      }
      if (other.getAvgLength() != 0F) {
        setAvgLength(other.getAvgLength());
      }
      if (other.hasRankHistogram()) {
        mergeRankHistogram(other.getRankHistogram());
      }
      if (other.hasWeightedStringStats()) {
        mergeWeightedStringStats(other.getWeightedStringStats());
      }
      if (!other.getVocabularyFile().isEmpty()) {
        vocabularyFile_ = other.vocabularyFile_;
        onChanged();
      }
      if (other.getInvalidUtf8Count() != 0L) {
        setInvalidUtf8Count(other.getInvalidUtf8Count());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      StringStatistics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (StringStatistics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private CommonStatistics commonStats_;
    private com.google.protobuf.SingleFieldBuilderV3<
        CommonStatistics, CommonStatistics.Builder, CommonStatisticsOrBuilder> commonStatsBuilder_;
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     * @return Whether the commonStats field is set.
     */
    public boolean hasCommonStats() {
      return commonStatsBuilder_ != null || commonStats_ != null;
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     * @return The commonStats.
     */
    public CommonStatistics getCommonStats() {
      if (commonStatsBuilder_ == null) {
        return commonStats_ == null ? CommonStatistics.getDefaultInstance() : commonStats_;
      } else {
        return commonStatsBuilder_.getMessage();
      }
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public Builder setCommonStats(CommonStatistics value) {
      if (commonStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commonStats_ = value;
        onChanged();
      } else {
        commonStatsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public Builder setCommonStats(
        CommonStatistics.Builder builderForValue) {
      if (commonStatsBuilder_ == null) {
        commonStats_ = builderForValue.build();
        onChanged();
      } else {
        commonStatsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public Builder mergeCommonStats(CommonStatistics value) {
      if (commonStatsBuilder_ == null) {
        if (commonStats_ != null) {
          commonStats_ =
            CommonStatistics.newBuilder(commonStats_).mergeFrom(value).buildPartial();
        } else {
          commonStats_ = value;
        }
        onChanged();
      } else {
        commonStatsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public Builder clearCommonStats() {
      if (commonStatsBuilder_ == null) {
        commonStats_ = null;
        onChanged();
      } else {
        commonStats_ = null;
        commonStatsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public CommonStatistics.Builder getCommonStatsBuilder() {
      
      onChanged();
      return getCommonStatsFieldBuilder().getBuilder();
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    public CommonStatisticsOrBuilder getCommonStatsOrBuilder() {
      if (commonStatsBuilder_ != null) {
        return commonStatsBuilder_.getMessageOrBuilder();
      } else {
        return commonStats_ == null ?
            CommonStatistics.getDefaultInstance() : commonStats_;
      }
    }
    /**
     * <code>.tensorflow.metadata.v0.CommonStatistics common_stats = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        CommonStatistics, CommonStatistics.Builder, CommonStatisticsOrBuilder>
        getCommonStatsFieldBuilder() {
      if (commonStatsBuilder_ == null) {
        commonStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            CommonStatistics, CommonStatistics.Builder, CommonStatisticsOrBuilder>(
                getCommonStats(),
                getParentForChildren(),
                isClean());
        commonStats_ = null;
      }
      return commonStatsBuilder_;
    }

    private long unique_ ;
    /**
     * <pre>
     * The number of unique values
     * </pre>
     *
     * <code>uint64 unique = 2;</code>
     * @return The unique.
     */
    @Override
    public long getUnique() {
      return unique_;
    }
    /**
     * <pre>
     * The number of unique values
     * </pre>
     *
     * <code>uint64 unique = 2;</code>
     * @param value The unique to set.
     * @return This builder for chaining.
     */
    public Builder setUnique(long value) {
      
      unique_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of unique values
     * </pre>
     *
     * <code>uint64 unique = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnique() {
      
      unique_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<FreqAndValue> topValues_ =
      java.util.Collections.emptyList();
    private void ensureTopValuesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        topValues_ = new java.util.ArrayList<FreqAndValue>(topValues_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        FreqAndValue, FreqAndValue.Builder, FreqAndValueOrBuilder> topValuesBuilder_;

    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public java.util.List<FreqAndValue> getTopValuesList() {
      if (topValuesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(topValues_);
      } else {
        return topValuesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public int getTopValuesCount() {
      if (topValuesBuilder_ == null) {
        return topValues_.size();
      } else {
        return topValuesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public FreqAndValue getTopValues(int index) {
      if (topValuesBuilder_ == null) {
        return topValues_.get(index);
      } else {
        return topValuesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder setTopValues(
        int index, FreqAndValue value) {
      if (topValuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopValuesIsMutable();
        topValues_.set(index, value);
        onChanged();
      } else {
        topValuesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder setTopValues(
        int index, FreqAndValue.Builder builderForValue) {
      if (topValuesBuilder_ == null) {
        ensureTopValuesIsMutable();
        topValues_.set(index, builderForValue.build());
        onChanged();
      } else {
        topValuesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder addTopValues(FreqAndValue value) {
      if (topValuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopValuesIsMutable();
        topValues_.add(value);
        onChanged();
      } else {
        topValuesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder addTopValues(
        int index, FreqAndValue value) {
      if (topValuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTopValuesIsMutable();
        topValues_.add(index, value);
        onChanged();
      } else {
        topValuesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder addTopValues(
        FreqAndValue.Builder builderForValue) {
      if (topValuesBuilder_ == null) {
        ensureTopValuesIsMutable();
        topValues_.add(builderForValue.build());
        onChanged();
      } else {
        topValuesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder addTopValues(
        int index, FreqAndValue.Builder builderForValue) {
      if (topValuesBuilder_ == null) {
        ensureTopValuesIsMutable();
        topValues_.add(index, builderForValue.build());
        onChanged();
      } else {
        topValuesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder addAllTopValues(
        Iterable<? extends FreqAndValue> values) {
      if (topValuesBuilder_ == null) {
        ensureTopValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, topValues_);
        onChanged();
      } else {
        topValuesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder clearTopValues() {
      if (topValuesBuilder_ == null) {
        topValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        topValuesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public Builder removeTopValues(int index) {
      if (topValuesBuilder_ == null) {
        ensureTopValuesIsMutable();
        topValues_.remove(index);
        onChanged();
      } else {
        topValuesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public FreqAndValue.Builder getTopValuesBuilder(
        int index) {
      return getTopValuesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public FreqAndValueOrBuilder getTopValuesOrBuilder(
        int index) {
      if (topValuesBuilder_ == null) {
        return topValues_.get(index);  } else {
        return topValuesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public java.util.List<? extends FreqAndValueOrBuilder>
         getTopValuesOrBuilderList() {
      if (topValuesBuilder_ != null) {
        return topValuesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(topValues_);
      }
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public FreqAndValue.Builder addTopValuesBuilder() {
      return getTopValuesFieldBuilder().addBuilder(
          FreqAndValue.getDefaultInstance());
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public FreqAndValue.Builder addTopValuesBuilder(
        int index) {
      return getTopValuesFieldBuilder().addBuilder(
          index, FreqAndValue.getDefaultInstance());
    }
    /**
     * <pre>
     * A sorted list of the most-frequent values and their frequencies, with
     * the most-frequent being first.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringStatistics.FreqAndValue top_values = 3;</code>
     */
    public java.util.List<FreqAndValue.Builder>
         getTopValuesBuilderList() {
      return getTopValuesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        FreqAndValue, FreqAndValue.Builder, FreqAndValueOrBuilder>
        getTopValuesFieldBuilder() {
      if (topValuesBuilder_ == null) {
        topValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            FreqAndValue, FreqAndValue.Builder, FreqAndValueOrBuilder>(
                topValues_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        topValues_ = null;
      }
      return topValuesBuilder_;
    }

    private float avgLength_ ;
    /**
     * <pre>
     * The average length of the values
     * </pre>
     *
     * <code>float avg_length = 4;</code>
     * @return The avgLength.
     */
    @Override
    public float getAvgLength() {
      return avgLength_;
    }
    /**
     * <pre>
     * The average length of the values
     * </pre>
     *
     * <code>float avg_length = 4;</code>
     * @param value The avgLength to set.
     * @return This builder for chaining.
     */
    public Builder setAvgLength(float value) {
      
      avgLength_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The average length of the values
     * </pre>
     *
     * <code>float avg_length = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAvgLength() {
      
      avgLength_ = 0F;
      onChanged();
      return this;
    }

    private RankHistogram rankHistogram_;
    private com.google.protobuf.SingleFieldBuilderV3<
        RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder> rankHistogramBuilder_;
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     * @return Whether the rankHistogram field is set.
     */
    public boolean hasRankHistogram() {
      return rankHistogramBuilder_ != null || rankHistogram_ != null;
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     * @return The rankHistogram.
     */
    public RankHistogram getRankHistogram() {
      if (rankHistogramBuilder_ == null) {
        return rankHistogram_ == null ? RankHistogram.getDefaultInstance() : rankHistogram_;
      } else {
        return rankHistogramBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public Builder setRankHistogram(RankHistogram value) {
      if (rankHistogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rankHistogram_ = value;
        onChanged();
      } else {
        rankHistogramBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public Builder setRankHistogram(
        RankHistogram.Builder builderForValue) {
      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = builderForValue.build();
        onChanged();
      } else {
        rankHistogramBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public Builder mergeRankHistogram(RankHistogram value) {
      if (rankHistogramBuilder_ == null) {
        if (rankHistogram_ != null) {
          rankHistogram_ =
            RankHistogram.newBuilder(rankHistogram_).mergeFrom(value).buildPartial();
        } else {
          rankHistogram_ = value;
        }
        onChanged();
      } else {
        rankHistogramBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public Builder clearRankHistogram() {
      if (rankHistogramBuilder_ == null) {
        rankHistogram_ = null;
        onChanged();
      } else {
        rankHistogram_ = null;
        rankHistogramBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public RankHistogram.Builder getRankHistogramBuilder() {
      
      onChanged();
      return getRankHistogramFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    public RankHistogramOrBuilder getRankHistogramOrBuilder() {
      if (rankHistogramBuilder_ != null) {
        return rankHistogramBuilder_.getMessageOrBuilder();
      } else {
        return rankHistogram_ == null ?
            RankHistogram.getDefaultInstance() : rankHistogram_;
      }
    }
    /**
     * <pre>
     * The rank histogram for the values of the feature.
     * The rank is used to measure of how commonly the value is found in the
     * dataset. The most common value would have a rank of 1, with the second-most
     * common value having a rank of 2, and so on.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.RankHistogram rank_histogram = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder>
        getRankHistogramFieldBuilder() {
      if (rankHistogramBuilder_ == null) {
        rankHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            RankHistogram, RankHistogram.Builder, RankHistogramOrBuilder>(
                getRankHistogram(),
                getParentForChildren(),
                isClean());
        rankHistogram_ = null;
      }
      return rankHistogramBuilder_;
    }

    private WeightedStringStatistics weightedStringStats_;
    private com.google.protobuf.SingleFieldBuilderV3<
        WeightedStringStatistics, WeightedStringStatistics.Builder, WeightedStringStatisticsOrBuilder> weightedStringStatsBuilder_;
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     * @return Whether the weightedStringStats field is set.
     */
    public boolean hasWeightedStringStats() {
      return weightedStringStatsBuilder_ != null || weightedStringStats_ != null;
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     * @return The weightedStringStats.
     */
    public WeightedStringStatistics getWeightedStringStats() {
      if (weightedStringStatsBuilder_ == null) {
        return weightedStringStats_ == null ? WeightedStringStatistics.getDefaultInstance() : weightedStringStats_;
      } else {
        return weightedStringStatsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public Builder setWeightedStringStats(WeightedStringStatistics value) {
      if (weightedStringStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        weightedStringStats_ = value;
        onChanged();
      } else {
        weightedStringStatsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public Builder setWeightedStringStats(
        WeightedStringStatistics.Builder builderForValue) {
      if (weightedStringStatsBuilder_ == null) {
        weightedStringStats_ = builderForValue.build();
        onChanged();
      } else {
        weightedStringStatsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public Builder mergeWeightedStringStats(WeightedStringStatistics value) {
      if (weightedStringStatsBuilder_ == null) {
        if (weightedStringStats_ != null) {
          weightedStringStats_ =
            WeightedStringStatistics.newBuilder(weightedStringStats_).mergeFrom(value).buildPartial();
        } else {
          weightedStringStats_ = value;
        }
        onChanged();
      } else {
        weightedStringStatsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public Builder clearWeightedStringStats() {
      if (weightedStringStatsBuilder_ == null) {
        weightedStringStats_ = null;
        onChanged();
      } else {
        weightedStringStats_ = null;
        weightedStringStatsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public WeightedStringStatistics.Builder getWeightedStringStatsBuilder() {
      
      onChanged();
      return getWeightedStringStatsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    public WeightedStringStatisticsOrBuilder getWeightedStringStatsOrBuilder() {
      if (weightedStringStatsBuilder_ != null) {
        return weightedStringStatsBuilder_.getMessageOrBuilder();
      } else {
        return weightedStringStats_ == null ?
            WeightedStringStatistics.getDefaultInstance() : weightedStringStats_;
      }
    }
    /**
     * <pre>
     * Weighted statistics for the feature, if the values have weights.
     * </pre>
     *
     * <code>.tensorflow.metadata.v0.WeightedStringStatistics weighted_string_stats = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        WeightedStringStatistics, WeightedStringStatistics.Builder, WeightedStringStatisticsOrBuilder>
        getWeightedStringStatsFieldBuilder() {
      if (weightedStringStatsBuilder_ == null) {
        weightedStringStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            WeightedStringStatistics, WeightedStringStatistics.Builder, WeightedStringStatisticsOrBuilder>(
                getWeightedStringStats(),
                getParentForChildren(),
                isClean());
        weightedStringStats_ = null;
      }
      return weightedStringStatsBuilder_;
    }

    private Object vocabularyFile_ = "";
    /**
     * <pre>
     * A vocabulary file, used for vocabularies too large to store in the proto
     * itself.  Note that the file may be relative to some context-dependent
     * directory.  E.g. in TFX the feature statistics will live in a PPP and
     * vocabulary file names will be relative to this PPP.
     * </pre>
     *
     * <code>string vocabulary_file = 7;</code>
     * @return The vocabularyFile.
     */
    public String getVocabularyFile() {
      Object ref = vocabularyFile_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        vocabularyFile_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * A vocabulary file, used for vocabularies too large to store in the proto
     * itself.  Note that the file may be relative to some context-dependent
     * directory.  E.g. in TFX the feature statistics will live in a PPP and
     * vocabulary file names will be relative to this PPP.
     * </pre>
     *
     * <code>string vocabulary_file = 7;</code>
     * @return The bytes for vocabularyFile.
     */
    public com.google.protobuf.ByteString
        getVocabularyFileBytes() {
      Object ref = vocabularyFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        vocabularyFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A vocabulary file, used for vocabularies too large to store in the proto
     * itself.  Note that the file may be relative to some context-dependent
     * directory.  E.g. in TFX the feature statistics will live in a PPP and
     * vocabulary file names will be relative to this PPP.
     * </pre>
     *
     * <code>string vocabulary_file = 7;</code>
     * @param value The vocabularyFile to set.
     * @return This builder for chaining.
     */
    public Builder setVocabularyFile(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vocabularyFile_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A vocabulary file, used for vocabularies too large to store in the proto
     * itself.  Note that the file may be relative to some context-dependent
     * directory.  E.g. in TFX the feature statistics will live in a PPP and
     * vocabulary file names will be relative to this PPP.
     * </pre>
     *
     * <code>string vocabulary_file = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearVocabularyFile() {
      
      vocabularyFile_ = getDefaultInstance().getVocabularyFile();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A vocabulary file, used for vocabularies too large to store in the proto
     * itself.  Note that the file may be relative to some context-dependent
     * directory.  E.g. in TFX the feature statistics will live in a PPP and
     * vocabulary file names will be relative to this PPP.
     * </pre>
     *
     * <code>string vocabulary_file = 7;</code>
     * @param value The bytes for vocabularyFile to set.
     * @return This builder for chaining.
     */
    public Builder setVocabularyFileBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  AbstractMessageLite.checkByteStringIsUtf8(value);
      
      vocabularyFile_ = value;
      onChanged();
      return this;
    }

    private long invalidUtf8Count_ ;
    /**
     * <pre>
     * Counts the number of invalid utf8 strings present in leaf arrays for this
     * feature. Validation is only performed for byte- or string-like features (
     * those having type BYTES or STRING).
     * </pre>
     *
     * <code>uint64 invalid_utf8_count = 8;</code>
     * @return The invalidUtf8Count.
     */
    @Override
    public long getInvalidUtf8Count() {
      return invalidUtf8Count_;
    }
    /**
     * <pre>
     * Counts the number of invalid utf8 strings present in leaf arrays for this
     * feature. Validation is only performed for byte- or string-like features (
     * those having type BYTES or STRING).
     * </pre>
     *
     * <code>uint64 invalid_utf8_count = 8;</code>
     * @param value The invalidUtf8Count to set.
     * @return This builder for chaining.
     */
    public Builder setInvalidUtf8Count(long value) {
      
      invalidUtf8Count_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Counts the number of invalid utf8 strings present in leaf arrays for this
     * feature. Validation is only performed for byte- or string-like features (
     * those having type BYTES or STRING).
     * </pre>
     *
     * <code>uint64 invalid_utf8_count = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvalidUtf8Count() {
      
      invalidUtf8Count_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.metadata.v0.StringStatistics)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.StringStatistics)
  private static final StringStatistics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new StringStatistics();
  }

  public static StringStatistics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StringStatistics>
      PARSER = new com.google.protobuf.AbstractParser<StringStatistics>() {
    @Override
    public StringStatistics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StringStatistics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StringStatistics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<StringStatistics> getParserForType() {
    return PARSER;
  }

  @Override
  public StringStatistics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

